// <auto-generated />
using AulaConexao.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AulaConexao.Data.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210227012643_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AulaConexao.Domain.Models.AlunoTurma", b =>
                {
                    b.Property<int>("AlunpId")
                        .HasColumnType("int");

                    b.Property<int>("TurmaId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("AlunpId", "TurmaId");

                    b.HasIndex("TurmaId");

                    b.ToTable("AlunoTurma");

                    b.HasData(
                        new
                        {
                            AlunpId = 1,
                            TurmaId = 1,
                            Id = 1
                        },
                        new
                        {
                            AlunpId = 2,
                            TurmaId = 1,
                            Id = 2
                        },
                        new
                        {
                            AlunpId = 3,
                            TurmaId = 1,
                            Id = 3
                        },
                        new
                        {
                            AlunpId = 4,
                            TurmaId = 2,
                            Id = 4
                        },
                        new
                        {
                            AlunpId = 5,
                            TurmaId = 2,
                            Id = 5
                        },
                        new
                        {
                            AlunpId = 6,
                            TurmaId = 2,
                            Id = 6
                        });
                });

            modelBuilder.Entity("AulaConexao.Domain.Models.Turma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Turma");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Curso Campinas Tech",
                            Nome = "Asp.Net"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Curso Udemy",
                            Nome = "React"
                        });
                });

            modelBuilder.Entity("AulaConexao.Domain.Models.TurmaProfessor", b =>
                {
                    b.Property<int>("TurmaId")
                        .HasColumnType("int");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("TurmaId", "ProfessorId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("TurmaProfessor");

                    b.HasData(
                        new
                        {
                            TurmaId = 1,
                            ProfessorId = 1,
                            Id = 1
                        },
                        new
                        {
                            TurmaId = 1,
                            ProfessorId = 2,
                            Id = 2
                        },
                        new
                        {
                            TurmaId = 2,
                            ProfessorId = 3,
                            Id = 3
                        },
                        new
                        {
                            TurmaId = 2,
                            ProfessorId = 4,
                            Id = 4
                        });
                });

            modelBuilder.Entity("Models.AulaConexao.Domain.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Aluno");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            Nome = "Bruno"
                        },
                        new
                        {
                            Id = 2,
                            Ativo = true,
                            Nome = "Fabio"
                        },
                        new
                        {
                            Id = 3,
                            Ativo = true,
                            Nome = "Renata"
                        },
                        new
                        {
                            Id = 4,
                            Ativo = true,
                            Nome = "Camila"
                        },
                        new
                        {
                            Id = 5,
                            Ativo = true,
                            Nome = "Fernado"
                        },
                        new
                        {
                            Id = 6,
                            Ativo = true,
                            Nome = "Luan"
                        });
                });

            modelBuilder.Entity("Models.AulaConexao.Domain.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Turno")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Professor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Ramos@.com",
                            Nome = "Bruno",
                            Turno = "Manha"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Nako@.com",
                            Nome = "Fabio",
                            Turno = "Tarde"
                        },
                        new
                        {
                            Id = 3,
                            Email = "Laura@.com",
                            Nome = "Renata",
                            Turno = "Noite"
                        },
                        new
                        {
                            Id = 4,
                            Email = "Farias@.com",
                            Nome = "Camila",
                            Turno = "Integral"
                        });
                });

            modelBuilder.Entity("AulaConexao.Domain.Models.AlunoTurma", b =>
                {
                    b.HasOne("Models.AulaConexao.Domain.Aluno", "Aluno")
                        .WithMany("AlunosTurmas")
                        .HasForeignKey("AlunpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AulaConexao.Domain.Models.Turma", "Turma")
                        .WithMany("AlunosTurmas")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AulaConexao.Domain.Models.TurmaProfessor", b =>
                {
                    b.HasOne("Models.AulaConexao.Domain.Professor", "Professor")
                        .WithMany("TurmasProfessores")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AulaConexao.Domain.Models.Turma", "Turma")
                        .WithMany("TurmasProfessores")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
